name: sss

on: 
  # workflow_dispatch:
  push:
    branches:
      - main
    
permissions:
      id-token: write # This is required for aws oidc connection
      contents: read # This is required for actions/checkout
      pull-requests: write # This is required for gh bot to comment PR

jobs:
  terraform_job:
    name: Terraform Deployment
    # needs: packer_job
    runs-on: ubuntu-latest
    environment: Terraform

    steps:
      
      - name: Print Environment Name
        run: echo ${{ github.environment}}
      
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::882743124337:role/infra-sls-role
          # role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: ap-south-1
          role-session-name: GitHub-OIDC-TERRAFORM
    

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.5

      - name: Terraform Init
        working-directory: ./terraform
        id: init
        env:
          AWS_BUCKET_NAME: github-oidc-aws-tfstates-lk
          AWS_BUCKET_KEY_NAME: infra2.tfstate
          AWS_REGION: ap-south-1
        run: |
          terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"
          terraform validate -no-color

      - name: Plan and Apply
        working-directory: ./terraform
        run: |
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan  

      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: ${{ matrix.node-version }}
      #   # - run: npm ci

      # - name: serverless deploy
      #   uses: serverless/github-action@v2
      #   with:
      #     args: deploy
      # # - run: npm install -g serverless
      #   env:
      #     # SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
      #     # or if using AWS credentials directly
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


  serverless_job:
    name: Serverless Deployment
    runs-on: ubuntu-latest
    # needs: terraform_job
    environment: Serverless

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18.x

      # - name: Install nvm
      #   run: |
      #     curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
      #     export NVM_DIR="$HOME/.nvm"
      #     [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
      #     [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" 
      #     nvm install 18

      - name: Install serverless globally
        run: npm install -g serverless

      - name: serverless deploy/remove
        # uses: serverless/github-action@v3.2
        # with:
        #   args: deploy
        working-directory: ./sls
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          sls deploy
          